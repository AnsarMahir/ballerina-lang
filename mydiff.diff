diff --git a/bvm/ballerina-runtime/src/main/java/io/ballerina/runtime/internal/types/BFiniteType.java b/bvm/ballerina-runtime/src/main/java/io/ballerina/runtime/internal/types/BFiniteType.java
index 63468a3f6b0..5a0339be5df 100644
--- a/bvm/ballerina-runtime/src/main/java/io/ballerina/runtime/internal/types/BFiniteType.java
+++ b/bvm/ballerina-runtime/src/main/java/io/ballerina/runtime/internal/types/BFiniteType.java
@@ -157,6 +157,9 @@ public class BFiniteType extends BType implements FiniteType {
                 case TypeTags.CHAR_STRING_TAG:
                     joiner.add("\"" + value + "\"");
                     break;
+                case TypeTags.NULL_TAG:
+                    joiner.add("()");
+                    break;
                 default:
                     joiner.add(value.toString());
             }
diff --git a/tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/expressions/typecast/TypeCastExpressionsTest.java b/tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/expressions/typecast/TypeCastExpressionsTest.java
index 00f8b58f79a..808a4587b05 100644
--- a/tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/expressions/typecast/TypeCastExpressionsTest.java
+++ b/tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/expressions/typecast/TypeCastExpressionsTest.java
@@ -240,7 +240,7 @@ public class TypeCastExpressionsTest {
                 "testStringAsInvalidBasicType", "testCastPanicWithCheckTrap", "testFiniteTypeToValueTypeCastNegative",
                 "testFiniteTypeToRefTypeCastNegative", "testValueTypeToFiniteTypeCastNegative",
                 "testFiniteTypeToFiniteTypeCastNegative", "testCastOfFiniteTypeWithIntersectingBuiltInSubType",
-                "testFiniteTypeArrayNegative"
+                "testFiniteTypeArrayNegative", "testConstantsArrayNegative"
         };
     }
 
diff --git a/tests/jballerina-unit-test/src/test/resources/test-src/expressions/typecast/type_cast_expr.bal b/tests/jballerina-unit-test/src/test/resources/test-src/expressions/typecast/type_cast_expr.bal
index e1b640ce1bb..f7e51a80fa0 100644
--- a/tests/jballerina-unit-test/src/test/resources/test-src/expressions/typecast/type_cast_expr.bal
+++ b/tests/jballerina-unit-test/src/test/resources/test-src/expressions/typecast/type_cast_expr.bal
@@ -955,6 +955,20 @@ function testFiniteTypeArrayNegative() {
     assertTypeCastFailureWithMessage(trap <int>c, "incompatible types: '(1|2.0f|3.0d)[]' cannot be cast to 'int'");
 }
 
+const NIL = ();
+const int Interger = 1;
+const string String = "Ballerina";
+const float Float = 2.3;
+const decimal Decimal = 4.5d;
+const byte Byte = 5;
+const boolean Boolean = true;
+
+function testConstantsArrayNegative() {
+    (NIL|Interger|String|Float|Decimal|Byte|Boolean)[] a = [];
+     any c = a;
+     assertTypeCastFailureWithMessage(trap <int>c, "incompatible types: '(()|1|\"Ballerina\"|2.3f|4.5d|5|true)[]' cannot be cast to 'int'");
+}
+
 // Util functions
 
 const ASSERTION_ERROR_REASON = "AssertionError";
